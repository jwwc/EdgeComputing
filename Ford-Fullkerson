容量网络：
设有向图N = <V,E>
记n=|V|，m=|E|
容量：每一条边均对应一个非负的实数c(i,j)
N有两个特殊性质的顶点：S和t
-s称作发点(或源）
-t称作收点(或汇）
-其余的顶点称作中间节点
我们称N为容量网络，记作N=<V,E,c,s,t>
可行流
设f:E->R*,其中R*为非负实数集，满足：
1：容量限制：任意<i,j>属于E，f(i,j)<=c(i,j)
2: 平衡限制：任意i属于V-{s,t}
             任意<j.i>属于E对f(j,i)求和 = 任意<i.j>属于E对f(i,j)
则f是N的一个可行流
称发点s的一个净流出量为f的流量，记作v(f)
v(f) = 任意<s.j>属于E对f(s,j)求和 - 任意<j.s>属于E对f(j,s)
容量网络的建模
1：在多源多汇的网络中，增加一个源点和一个汇点，分别和原来的源点和汇点相连接
2：如果两点i->j之间存在回路，那么增加一个点，构建一个中间桥梁，j->v,v->i,这两条边的容量为j->i的容量
最大流的线性规划
1：f(i,j) <=c(i,j) <i,i>属于E
2：任意<j.i>属于E对f(j,i)求和 = 任意<i.j>属于E对f(i,j)，任意i属于V-{s,t}
3：v(f) - 任意<s.j>属于E对f(s,j)求和 + 任意<j.s>属于E对f(j,s) = 0
4：f(i,j)>=0,<i,j>属于E
5：v(f)>=0
割集：在N中，A属于U且s属于A，t属于-A,称（A，-A）= {<i,j>|<i,j>属于E且i属于A，j属于-A}
割集的容量：c(A,-A) = sum(c(i,j)),<i,j>属于(A,-A)
容量最小的割集称为最小割集
引理1,设N中，f是N中的任意一条可行流
	A属于V且s属于A，t属于-A，则
        v(f) = sum(f(i,j)) - sum(f(j,i),<i,j>属于(A,-A),<j,i>属于(-A,A)
引理2，设容量网络N中，f是N中的任一可行流，(A,-A)是任一割集，则v(f)<=c(A,-A)
引理3，在N中，f是N中的可行流，(A,-A)是任一割集，如果v(f) = c(A,-A),则
f是最大流，(A,-A)是最小割集
最大流和最小割定理
引理3：v(f)=c(A,-A) =>f是最大流，则(A,-A)是最小割集
网络的最大流的流量等于最小割集的容量
如何证明？
在N中，f是N上的任意可行流
饱和边：流量等于容量
非饱和边：流量小于容量
零流边：流量等于0的边
非零流边：流量大于0的边
i-j链，N中从顶点i到j的一条不重复的路径(不考虑方向）
i-j的方向是从i到j
前向边：链中与链的方向一致的边
后向边：链中与链的方向相反的边
i-j增广链
一条i-j的链
前向边都是非饱和边
后向边都是非零流边
设P是一条关于可行流f的s-t增广链
           min{P上前向边容量与流量只差}
var = min
           min{p上后向边流量}
基于可行流f构造成新的可行流f'
          f(i,j) + var <i,j>是P的前向边
f'(i,j) = f(i,j) - var <i,j>是P的后向边
          f(i,j)         其他
f'满足容量限制，平衡条件，非负，且
v(f') = v(f) + var
最大流最小割定理的证明
1：最大流上一定不存在s-t的增广链，因为如果存在增广链我就可以使用增广链来扩大这个流
2：是否不存在增广链的可行流就是最大流吗？
证明：
   假设不存在关于可行流f的s-t增广链，设 A={j属于V|存在关于可行流f的s-j增广链}
   s 属于A t属于-A
   性质1 ：(A,-A)是割集，且 f(i,j) = c(i,j),<i,j> 属于(A,-A）
   性质2 ：f(j,i) = 0,<j,i>属于(-A,A)
证明性质1：f(i,j) = c(i,j),<i,j>属于(A,-A)不成立
          则 <i,j>属于(A,-A)使得f(i,j)< c(i,j)
	  则 s-i增广链延<i,j>延伸得到s-j也是增广链
	  则根据A的定义有j属于A，与j属于-A矛盾
证明性质2：f(j,i) = 0,<j,i>属于(-A,A) 不成立
	  则 s-i增广链延<j,i>延伸得到s-j链也是增广链
          则根据A的定义有j属于A，与j属于-A矛盾
由引理1,设N中，f是N中的任意一条可行流
	A属于V且s属于A，t属于-A，则
        v(f) = sum(f(i,j)) - sum(f(j,i),<i,j>属于(A,-A),<j,i>属于(-A,A)
	得 v(f) = c(A,-A)
由引理3: v(f)=c(A,-A) =>f是最大流，则(A,-A)是最小割集
         v(f) = c(A,-A) => f是最大流，(A,-A)是最小割集
FF最大流算法思想
1：从给定的初始可行流f开始
   通常取0流，即每一条边均为0的可行流
2：每次找一条关于当前可行流的增广链
3：不断用增广链去扩展当前可行流得到新的可行流
4: 重复步奏2和3
   直到不存在关于当前可行流的s-t增广链为止
实例如截图
影响FF算法的因素
1：找s-t增广链的平均运行时间
2：最大流流量v*与增广链平均var值之比
算法的有限终止性
1：如果容量值都是正整数，则var也是整数
2：显然C = sum(c(i,j)),<i,j>属于E，并且v* <= C
上述意义下，算法必在有限步终止
存在无法有限步终止的可能性
容量值为无理数，var可能越来越小并趋向于0





